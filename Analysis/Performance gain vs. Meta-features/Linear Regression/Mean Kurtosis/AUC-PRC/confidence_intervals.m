clear all
x = [0.14479469096383013,
 0.27666079718374426,
 0.011960690494549175,
 0.1649292277536477,
 0.15860877132330398,
 10.224505250350306,
 8.502423361035484,
 8.564101016434181,
 12.527649135484495,
 11.222812265261885,
 1.4168663671408703,
 2.4454719754415177,
 1.5089035225857872,
 1.413990944898421,
 1.5621895407261883,
 5.447676112865485,
 3.3083993029400873,
 4.043997100057821,
 6.022462096648697,
 5.245803517315616,
 10.26276103279902,
 2.1146781368948733,
 2.239877618635381,
 4.415347286792825,
 9.66697851752918,
 -0.4253272096568116,
 -0.37867265201105593,
 -0.4481126272927651,
 -0.42049394161963566,
 -0.4065698212201429,
 1.274137504851796,
 2.322830528717021,
 0.30377469304583604,
 1.4484066043479402,
 1.5025736218418466,
 6.92855354271957,
 -0.5721452017749398,
 -0.6110070314394318,
 4.155683382907778,
 13.184380693327988,
 -0.7002368737159195,
 -0.7254049720012543,
 -0.6308846758040869,
 -0.8193253834032044,
 -0.689707819813357,
 0.2771948970245417,
 0.022780145181923617,
 -0.01529557576884244,
 -0.12513754840184976,
 -0.15468292369981151,
 4.425518352597101,
 4.876112846438094,
 3.80818291917675,
 4.299698204766511,
 4.2513516579744115,
 3.2489497692567166,
 0.8490105279978407,
 1.6266813700106515,
 1.3701963633080378,
 2.8954881373668506,
 2.775362395442384,
 2.860535871335785,
 2.9966328822411916,
 2.9200993889383478,
 2.8082034721698146,
 3.484437585616542,
 4.232433951635859,
 -0.7938492989697963,
 -0.7861109714992015,
 -0.8024617199112614,
 -0.7916395121232119,
 -0.7931625745135844,
 2.276776693718177,
 1.7769223559890306,
 2.1990551419197977,
 2.0564137368070017,
 2.138071972088605,
 10.36946341263536,
 7.375350388658298,
 13.294053602648546,
 8.48248774813227,
 7.178752460728238,
 8.866221295628263,
 0.3960881559271838,
 8.4161742873626,
 8.359908950175226];

y = [0.04371203675551494,
 0.008926218708827482,
 0.019554030874785577,
 0.04223905723905719,
 0.013381001021450456,
 0.13127801120448176,
 0.2797619047619048,
 0.07083333333333336,
 0.05694444444444441,
 0.03662464985994407,
 0.025308947108255153,
 0.0,
 0.056321839080459846,
 0.0,
 0.022410459910459868,
 0.051141166525781934,
 0.25,
 0.0,
 0.1339285714285714,
 0.21796916533758637,
 0.00454545454545463,
 0.18095238095238098,
 0.6666666666666667,
 0.33333333333333337,
 0.19117647058823528,
 0.06662664879296315,
 0.058918801563178524,
 0.056515960602824156,
 0.06354715572407327,
 0.09204107664406402,
 0.02894019560686223,
 0.0,
 0.10197802197802197,
 0.040125840125840195,
 -0.036106750392464804,
 0.0,
 0.25,
 0.1875,
 0.17439703153988872,
 0.20952380952380956,
 0.0,
 0.0,
 0.0,
 0.125,
 0.0,
 0.45000000000000007,
 0.38888888888888895,
 0.14999999999999997,
 0.08333333333333333,
 0.0,
 0.05719119958518171,
 0.051613337642749446,
 0.06819983199863766,
 0.04439159465061937,
 0.055677745173246196,
 0.06076388888888884,
 0.33333333333333337,
 0.0535714285714286,
 0.06285072951739612,
 0.016132478632478797,
 0.04070803797205991,
 0.06576024171332084,
 -0.03235581622678396,
 0.03779732811990888,
 0.05603512782728037,
 0.10119047619047616,
 0.07365967365967363,
 0.05563952445732756,
 0.057515703857212275,
 0.057419011688900845,
 0.056778325022668,
 0.0544967223676307,
 0.12885154061624648,
 0.15555555555555556,
 0.14141414141414144,
 0.19000000000000006,
 0.0,
 0.015403368794326217,
 0.007017543859649124,
 0.01855600539811067,
 0.020175438596491235,
 0.10467297275446685,
 0.13888888888888884,
 0.36476190476190473,
 0.1611842105263157,
 0.0];

xs = linspace(-01,20,101)';

meanfunc = [];                    % empty: don't use a mean function
covfunc = @covSEiso;              % Squared Exponental covariance function
likfunc = @likGauss;              % Gaussian likelihood

%Initialise hyperparameters structure
hyp = struct('mean', [], 'cov', [-0.001 0], 'lik',0);
hyp2 = minimize(hyp, @gp, -100, @infGaussLik, meanfunc, covfunc, likfunc, x,y);
K = feval(covfunc, hyp2.cov, x);

%Obtain the predictive mean and variance of test points
[mu,s2] = gp(hyp2, @infGaussLik, meanfunc, covfunc, likfunc,x,y,xs);

%Compute the (joint) negative log probability (density): nlml
nlml = gp(hyp2, @infGaussLik, meanfunc, covfunc, likfunc, x, y);
%Plot the predictive mean with predictive 95% confidence bounds and training data
f = [mu+2*sqrt(s2); flip(mu-2*sqrt(s2),1)];
fill([xs; flip(xs,1)], f, [7 7 7]/8)
hold on; plot(xs, mu, 'b'); plot(x,y,'r.','LineWidth',1)
xlabel('Mean kurtosis','FontSize',14)
ylabel('﻿Performance gain of ML vs. Statistics','FontSize',14)
a = get(gca,'XTickLabel');
b = get(gca,'YTickLabel');
set(gca,'XTickLabel',a,'fontsize',14)
set(gca,'XTickLabel',b,'fontsize',14)
title('﻿Performance gain (AUC-PRC) vs. Mean kurtosis','FontSize',14)
legend('95% predictive error bars', 'Predictive mean', 'Data', 'FontSize',12)
xlim([-1 20]);
%xticks(linspace(0,1000,10));


